// Code generated by protoc-gen-go.
// source: db.proto
// DO NOT EDIT!

/*
Package db is a generated protocol buffer package.

It is generated from these files:
	db.proto

It has these top-level messages:
	TodoListRequest
	TodoEntry
	TodoListResponse
	UserProfileRequest
	UserProfileResponse
	UserProfile
*/
package db

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// TodoListRequest is used for fetching a user's todo list
type TodoListRequest struct {
	User   string `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Limit  int64  `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	Offset int64  `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
}

func (m *TodoListRequest) Reset()                    { *m = TodoListRequest{} }
func (m *TodoListRequest) String() string            { return proto.CompactTextString(m) }
func (*TodoListRequest) ProtoMessage()               {}
func (*TodoListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type TodoEntry struct {
	Title string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Body  string `protobuf:"bytes,2,opt,name=body" json:"body,omitempty"`
}

func (m *TodoEntry) Reset()                    { *m = TodoEntry{} }
func (m *TodoEntry) String() string            { return proto.CompactTextString(m) }
func (*TodoEntry) ProtoMessage()               {}
func (*TodoEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type TodoListResponse struct {
	Exists  bool         `protobuf:"varint,1,opt,name=exists" json:"exists,omitempty"`
	Entries []*TodoEntry `protobuf:"bytes,2,rep,name=entries" json:"entries,omitempty"`
}

func (m *TodoListResponse) Reset()                    { *m = TodoListResponse{} }
func (m *TodoListResponse) String() string            { return proto.CompactTextString(m) }
func (*TodoListResponse) ProtoMessage()               {}
func (*TodoListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *TodoListResponse) GetEntries() []*TodoEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type UserProfileRequest struct {
	User string `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
}

func (m *UserProfileRequest) Reset()                    { *m = UserProfileRequest{} }
func (m *UserProfileRequest) String() string            { return proto.CompactTextString(m) }
func (*UserProfileRequest) ProtoMessage()               {}
func (*UserProfileRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type UserProfileResponse struct {
	Exists  bool         `protobuf:"varint,1,opt,name=exists" json:"exists,omitempty"`
	Profile *UserProfile `protobuf:"bytes,2,opt,name=profile" json:"profile,omitempty"`
}

func (m *UserProfileResponse) Reset()                    { *m = UserProfileResponse{} }
func (m *UserProfileResponse) String() string            { return proto.CompactTextString(m) }
func (*UserProfileResponse) ProtoMessage()               {}
func (*UserProfileResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *UserProfileResponse) GetProfile() *UserProfile {
	if m != nil {
		return m.Profile
	}
	return nil
}

type UserProfile struct {
	User string `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Pass string `protobuf:"bytes,3,opt,name=pass" json:"pass,omitempty"`
}

func (m *UserProfile) Reset()                    { *m = UserProfile{} }
func (m *UserProfile) String() string            { return proto.CompactTextString(m) }
func (*UserProfile) ProtoMessage()               {}
func (*UserProfile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func init() {
	proto.RegisterType((*TodoListRequest)(nil), "TodoListRequest")
	proto.RegisterType((*TodoEntry)(nil), "TodoEntry")
	proto.RegisterType((*TodoListResponse)(nil), "TodoListResponse")
	proto.RegisterType((*UserProfileRequest)(nil), "UserProfileRequest")
	proto.RegisterType((*UserProfileResponse)(nil), "UserProfileResponse")
	proto.RegisterType((*UserProfile)(nil), "UserProfile")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Todo service

type TodoClient interface {
	// TodoList returns a list of todo items.
	List(ctx context.Context, in *TodoListRequest, opts ...client.CallOption) (*TodoListResponse, error)
}

type todoClient struct {
	c           client.Client
	serviceName string
}

func NewTodoClient(serviceName string, c client.Client) TodoClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "todo"
	}
	return &todoClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *todoClient) List(ctx context.Context, in *TodoListRequest, opts ...client.CallOption) (*TodoListResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Todo.List", in)
	out := new(TodoListResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Todo service

type TodoHandler interface {
	// TodoList returns a list of todo items.
	List(context.Context, *TodoListRequest, *TodoListResponse) error
}

func RegisterTodoHandler(s server.Server, hdlr TodoHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Todo{hdlr}, opts...))
}

type Todo struct {
	TodoHandler
}

func (h *Todo) List(ctx context.Context, in *TodoListRequest, out *TodoListResponse) error {
	return h.TodoHandler.List(ctx, in, out)
}

// Client API for User service

type UserClient interface {
	// UserProfile returns a user profile.
	Profile(ctx context.Context, in *UserProfileRequest, opts ...client.CallOption) (*UserProfileResponse, error)
}

type userClient struct {
	c           client.Client
	serviceName string
}

func NewUserClient(serviceName string, c client.Client) UserClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "user"
	}
	return &userClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *userClient) Profile(ctx context.Context, in *UserProfileRequest, opts ...client.CallOption) (*UserProfileResponse, error) {
	req := c.c.NewRequest(c.serviceName, "User.Profile", in)
	out := new(UserProfileResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for User service

type UserHandler interface {
	// UserProfile returns a user profile.
	Profile(context.Context, *UserProfileRequest, *UserProfileResponse) error
}

func RegisterUserHandler(s server.Server, hdlr UserHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&User{hdlr}, opts...))
}

type User struct {
	UserHandler
}

func (h *User) Profile(ctx context.Context, in *UserProfileRequest, out *UserProfileResponse) error {
	return h.UserHandler.Profile(ctx, in, out)
}

func init() { proto.RegisterFile("db.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 299 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x52, 0x41, 0x4b, 0xf3, 0x40,
	0x10, 0xa5, 0x6d, 0xbe, 0xb6, 0x99, 0x7c, 0x60, 0xdd, 0x16, 0x09, 0x3d, 0x85, 0x45, 0x24, 0x20,
	0xec, 0x21, 0xd5, 0x9b, 0x57, 0x0f, 0x82, 0x87, 0xb2, 0xda, 0x1f, 0xd0, 0x90, 0x09, 0x2c, 0xa4,
	0xd9, 0xb8, 0xb3, 0x05, 0xfb, 0xef, 0x65, 0x37, 0x89, 0xd6, 0x5a, 0xf4, 0xf6, 0xde, 0xec, 0xcc,
	0xbc, 0x79, 0x2f, 0x81, 0x69, 0x91, 0x8b, 0xc6, 0x68, 0xab, 0xf9, 0x0b, 0x5c, 0xbc, 0xea, 0x42,
	0x3f, 0x2b, 0xb2, 0x12, 0xdf, 0xf6, 0x48, 0x96, 0x31, 0x08, 0xf6, 0x84, 0x26, 0x1e, 0x24, 0x83,
	0x34, 0x94, 0x1e, 0xb3, 0x05, 0xfc, 0xab, 0xd4, 0x4e, 0xd9, 0x78, 0x98, 0x0c, 0xd2, 0x91, 0x6c,
	0x09, 0xbb, 0x82, 0xb1, 0x2e, 0x4b, 0x42, 0x1b, 0x8f, 0x7c, 0xb9, 0x63, 0xfc, 0x1e, 0x42, 0xb7,
	0xf4, 0xb1, 0xb6, 0xe6, 0xe0, 0x46, 0xad, 0xb2, 0x15, 0x76, 0xfb, 0x5a, 0xe2, 0x44, 0x72, 0x5d,
	0x1c, 0xfc, 0xbe, 0x50, 0x7a, 0xcc, 0xd7, 0x30, 0xfb, 0xba, 0x85, 0x1a, 0x5d, 0x13, 0x3a, 0x09,
	0x7c, 0x57, 0x64, 0xc9, 0x8f, 0x4f, 0x65, 0xc7, 0xd8, 0x35, 0x4c, 0xb0, 0xb6, 0x46, 0x21, 0xc5,
	0xc3, 0x64, 0x94, 0x46, 0x19, 0x88, 0x4f, 0x49, 0xd9, 0x3f, 0xf1, 0x14, 0xd8, 0x86, 0xd0, 0xac,
	0x8d, 0x2e, 0x55, 0x85, 0xbf, 0x18, 0xe4, 0x1b, 0x98, 0x7f, 0xeb, 0xfc, 0x43, 0xfe, 0x06, 0x26,
	0x4d, 0xdb, 0xea, 0x1d, 0x44, 0xd9, 0x7f, 0x71, 0x3c, 0xde, 0x3f, 0xf2, 0x27, 0x88, 0x8e, 0xea,
	0x67, 0xa3, 0x65, 0x10, 0xd4, 0xdb, 0x1d, 0xf6, 0x49, 0x38, 0xec, 0x6a, 0xcd, 0x96, 0xc8, 0xc7,
	0x1a, 0x4a, 0x8f, 0xb3, 0x15, 0x04, 0xce, 0x21, 0xbb, 0x85, 0xc0, 0x25, 0xc4, 0x66, 0xe2, 0xe4,
	0xc3, 0x2d, 0x2f, 0xc5, 0x69, 0x7c, 0xd9, 0x03, 0x04, 0x4e, 0x9f, 0xdd, 0xc1, 0xa4, 0xbf, 0x61,
	0x2e, 0x7e, 0x46, 0xb2, 0x5c, 0x88, 0x33, 0xee, 0xf3, 0xb1, 0xff, 0x47, 0x56, 0x1f, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x99, 0x60, 0xbf, 0x16, 0x2f, 0x02, 0x00, 0x00,
}
